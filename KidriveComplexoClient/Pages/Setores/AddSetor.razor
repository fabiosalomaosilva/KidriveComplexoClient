@page "/setores/add"
@inject HttpClient httpClient
@inject IChangeService ChangeService
@inject NavigationManager navigation

<MudGrid>
    <MudItem xs="12">
        <MudPaper Class="@Estilo" Elevation="@Elevation">
            <h1>Cadastro de setor</h1>
            <p>Inserir os dados do novo setor</p>
            <br />
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField @bind-Value="obj.nome" label="Nome do setor" Variant="Variant.Outlined" InputType="InputType.Text"></MudTextField>
                </MudItem>


                <MudItem xs="12" Class="d-flex justify-end">
                    <MudButton Variant="Variant.Outlined" Color="Color.Warning" Size="Size.Medium" FullWidth="false" Style="width:180px" @onclick="Cancelar">Cancelar</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Success" Size="Size.Medium" FullWidth="false" Class="pa-2 mx-2" Style="width:180px" @onclick="Salvar">Salvar</MudButton>
                </MudItem>
            </MudGrid>

        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private Setor obj = new Setor();
    private string Estilo;
    private int Elevation;
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    protected override void OnInitialized()
    {
        if (ModalInstance != null)
        {
            Estilo = "d-flex flex-column align-left justify-center mud-width-full";
            Elevation = 0;
        }
        else
        {
            Estilo = "d-flex flex-column align-left justify-center mud-width-full py-8 px-8";
            Elevation = 1;
            StateHasChanged();
        }
    }

    void ValueChange()
    {
        StateHasChanged();
    }
    async void Salvar()
    {
        var result = await httpClient.PostAsJsonAsync<Setor>("/api/setores", obj);
        if (result.IsSuccessStatusCode)
        {
            ChangeService.Change();
            obj = new Setor();
            if (ModalInstance != null)
                await ModalInstance.CloseAsync();

            navigation.NavigateTo("/setores/list");
        }
    }
    void Cancelar()
    {
        navigation.NavigateTo("/setores/list");

    }
}
