@page "/setores/list"
@using System.Net.Http.Json
@inject HttpClient httpClient
@inject IChangeService ChangeService
@inject NavigationManager navigation
@inject IDialogService DialogService

<MudTable Items="@Elements" Dense="true" Hover="true" RowsPerPage="20" Bordered="false" Striped="true" Filter="new Func<Setor,bool>(FilterFunc)" @bind-SelectedItem="selectedItem">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Setores</MudText>
        <MudToolBarSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Pesquisa" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Immediate="true" Clearable="true" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Nome</MudTh>
        <MudTh>Ações</MudTh>
    </HeaderContent>
    <RowTemplate>

        <MudTd DataLabel="Setor">@context.nome</MudTd>
        <MudTd DataLabel="Ações" Style="width:100px;">
            <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" OnClick="Edit"></MudIconButton>
            <MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Small"></MudIconButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager RowsPerPageString="Linhas por página" InfoFormat="{first_item} - {last_item} de {all_items}" />
    </PagerContent>
</MudTable>

@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;
    private string searchString = "";
    private Setor selectedItem = null;
    private HashSet<Setor> selectedItems = new HashSet<Setor>();

    private IEnumerable<Setor> Elements = new List<Setor>();

    protected override async Task OnInitializedAsync()
    {
        Elements = await httpClient.GetFromJsonAsync<List<Setor>>("/api/setores");
        ChangeService.OnChange += OnChange;
    }

    private void OnChange()
    {
        StateHasChanged();
    }

    private bool FilterFunc(Setor element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.nome.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.nome}".Contains(searchString))
            return true;
        return false;
    }

    void Edit()
    {
        //navigation.NavigateTo("/setores/list");
        var dialog = DialogService.Show<AddSetor>("Adicionar setor");
    }
}
