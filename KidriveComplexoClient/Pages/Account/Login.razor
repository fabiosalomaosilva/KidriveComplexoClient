@page "/login"
@layout AnonimousLayout
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<MudItem Width="100%">
    <MudContainer MaxWidth="MaxWidth.Small">
        <MudPaper Width="100%" Square="false" Style="padding-inline:15px;">
            <MudCardContent>
                <MudText Align="Align.Center"><img src="/img/brasao-150.png" width="120" /></MudText>
                <br />
                <MudText Typo="Typo.h5" Align="Align.Center">Complexo Regulador Estadual</MudText>
                <MudText Typo="Typo.body2" Align="Align.Center">Entrar com os dados de usuário</MudText>
                <br />
                <MudGrid>
                    <MudItem xs="12">
                        <MudTextField @bind-Value="loginModel.email" label="E-mail" Variant="Variant.Outlined" InputType="InputType.Email"></MudTextField>
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField @bind-Value="loginModel.password" label="Senha" Variant="Variant.Outlined" InputType="InputType.Password"></MudTextField>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
            <MudCardActions class="card-actions mx-2" Style="flex-direction:column;align-items:start;">
                <ButtonProgress Color="Color.Info" Loading="@carregando" Variant="Variant.Filled" FullWidth="true" Size="Size.Medium" Title="Entrar" ColorProgress="#fff" OnClick="HandleLogin" />
                <MudLink Href="/counter" Typo="Typo.subtitle2" Style="margin-top:8px;margin-left:5px;">Esqueci a senha</MudLink>
            </MudCardActions>
            <MudCardContent>
            </MudCardContent>
            @if (ShowErrors)
            {
                <div class="alert alert-danger" role="alert">
                    <p>@Error</p>
                </div>
            }
        </MudPaper>
    </MudContainer>
</MudItem>

@code {
    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private bool carregando = false;
    private string Error = "";

    protected override async Task OnInitializedAsync()
    {
        await AuthService.Logout();
    }

    private async Task HandleLogin()
    {
        carregando = true;
        if (string.IsNullOrEmpty(loginModel.email) || string.IsNullOrEmpty(loginModel.password))
        {
            carregando = false;
            Alert("Dados incompletos", Variant.Filled);
            return;
        }
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            carregando = false;
            Alert(Error, Variant.Filled);
        }
    }
    void Alert(string message, Variant variant)
    {
        Snackbar.Configuration.BackgroundBlurred = true;
        Snackbar.Configuration.SnackbarVariant = variant;
        Snackbar.Configuration.MaxDisplayedSnackbars = 10;
        Snackbar.Add(message, Severity.Error);
    }
}

